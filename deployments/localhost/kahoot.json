{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_gameName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_qid",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_question",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_answerOne",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_answerTwo",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_answerThree",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_answerFour",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_correctAnswer",
          "type": "uint256"
        }
      ],
      "name": "addQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_studentAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_studentName",
          "type": "string"
        }
      ],
      "name": "addStudent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_studentAnswer",
          "type": "uint256"
        }
      ],
      "name": "answerQuestion",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "fetchAnswers",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_qid",
          "type": "uint256"
        }
      ],
      "name": "fetchQuestion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_studentAddress",
          "type": "address"
        }
      ],
      "name": "isThisAddressStudent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "questionsAnsweredByStudent",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2b8286f87c9ea471fdac65bbacd2c3c6264a9a0284a87a84136f77a5703f3322",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1248744",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x62f9dcb914208061317e57835841149a36f3d688257480edea083661dd9d97e7",
    "transactionHash": "0x2b8286f87c9ea471fdac65bbacd2c3c6264a9a0284a87a84136f77a5703f3322",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1248744",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "SpongeBob Quiz"
  ],
  "numDeployments": 1,
  "solcInputHash": "dbb91dd9026646a81a030400ba772e03",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_gameName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_qid\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_question\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_answerOne\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_answerTwo\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_answerThree\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_answerFour\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_correctAnswer\",\"type\":\"uint256\"}],\"name\":\"addQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_studentAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_studentName\",\"type\":\"string\"}],\"name\":\"addStudent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_studentAnswer\",\"type\":\"uint256\"}],\"name\":\"answerQuestion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"fetchAnswers\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_qid\",\"type\":\"uint256\"}],\"name\":\"fetchQuestion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_studentAddress\",\"type\":\"address\"}],\"name\":\"isThisAddressStudent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"questionsAnsweredByStudent\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/kahoot.sol\":\"kahoot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/kahoot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\ncontract kahoot {\\n  address payable public owner;\\n  string private nameOfGame;\\n\\n  constructor(string memory _gameName) {\\n    owner = payable(msg.sender);\\n    nameOfGame = _gameName;\\n  }\\n\\n  modifier isOwner() {\\n    require(msg.sender == owner);\\n    _;\\n  }\\n\\n  function deposit() public payable {\\n    owner.transfer(msg.value);\\n  }\\n\\n  struct Questions {\\n    string[] Answers;\\n    uint256 correctAnswer;\\n  }\\n  struct Students {\\n    string Name;\\n    address StudentAddress;\\n  }\\n  address[] studentsArray;\\n\\n  mapping(uint256 => mapping(string => address)) internal students;\\n  mapping(uint256 => address) internal studentsAddresses;\\n  mapping(address => uint256) internal studentsIds;\\n  mapping(uint256 => mapping(string => Questions)) internal questions;\\n  mapping(uint256 => string) internal idQuestions;\\n  mapping(uint256 => string[]) internal questionAnswers;\\n  mapping(uint256 => uint256) internal correctAnswerMapping;\\n  mapping(address => uint256[]) internal didStudentRespond;\\n\\n  // Add a student to be allowed to play the game\\n  function addStudent(\\n    uint256 _id,\\n    address _studentAddress,\\n    string memory _studentName\\n  ) public isOwner {\\n    students[_id][_studentName] = _studentAddress;\\n    studentsAddresses[_id] = _studentAddress;\\n    studentsIds[_studentAddress] = _id;\\n    studentsArray.push(_studentAddress);\\n  }\\n\\n  // Adds question/answers to mappings\\n  function addQuestion(\\n    uint256 _qid,\\n    string memory _question,\\n    string memory _answerOne,\\n    string memory _answerTwo,\\n    string memory _answerThree,\\n    string memory _answerFour,\\n    uint256 _correctAnswer\\n  ) public isOwner {\\n    Questions storage _q = questions[_qid][_question];\\n    _q.Answers = [_answerOne, _answerTwo, _answerThree, _answerFour];\\n    _q.correctAnswer = _correctAnswer;\\n    idQuestions[_qid] = _question;\\n    questionAnswers[_qid] = [_answerOne, _answerTwo, _answerThree, _answerFour];\\n    correctAnswerMapping[_qid] = _correctAnswer;\\n  }\\n\\n  // Fetches Question String By It's ID in the 2nd Mapping\\n  function fetchQuestion(uint256 _qid) public view returns (string memory) {\\n    string memory veribeel;\\n    veribeel = idQuestions[_qid];\\n    return veribeel;\\n  }\\n\\n  // Fetches All possible Answers of a certain question by ID\\n  function fetchAnswers(uint256 _id) public view returns (string[] memory) {\\n    string memory veribeel;\\n    string[] memory allAnswers;\\n    veribeel = idQuestions[_id];\\n    allAnswers = questionAnswers[_id];\\n    return allAnswers;\\n  }\\n\\n  // Returns True/False based on string input if matches QuestionID's correctAnswer\\n  function answerQuestion(uint256 _id, uint256 _studentAnswer)\\n    public\\n    returns (bool)\\n  {\\n    uint256 studentAnswer = correctAnswerMapping[_id];\\n    didStudentRespond[msg.sender] = [_id];\\n    if (_studentAnswer == studentAnswer) {\\n      return true;\\n    } else {\\n      return false;\\n    }\\n  }\\n\\n  function isThisAddressStudent(address _studentAddress)\\n    public\\n    view\\n    returns (bool)\\n  {\\n    for (uint256 i = 0; i < studentsArray.length; i++) {\\n      if (studentsArray[i] == _studentAddress) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  function questionsAnsweredByStudent(address _address)\\n    public\\n    view\\n    returns (uint256[] memory)\\n  {\\n    uint256[] memory variable = didStudentRespond[_address];\\n    return variable;\\n  }\\n\\n}\\n\",\"keccak256\":\"0x78566429c6719e3e2df4257e3d36454cec49d96e53b456457513ef8f40581631\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001843380380620018438339818101604052810190620000379190620002e4565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600190805190602001906200008f92919062000097565b50506200039a565b828054620000a59062000364565b90600052602060002090601f016020900481019282620000c9576000855562000115565b82601f10620000e457805160ff191683800117855562000115565b8280016001018555821562000115579182015b8281111562000114578251825591602001919060010190620000f7565b5b50905062000124919062000128565b5090565b5b808211156200014357600081600090555060010162000129565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b08262000165565b810181811067ffffffffffffffff82111715620001d257620001d162000176565b5b80604052505050565b6000620001e762000147565b9050620001f58282620001a5565b919050565b600067ffffffffffffffff82111562000218576200021762000176565b5b620002238262000165565b9050602081019050919050565b60005b838110156200025057808201518184015260208101905062000233565b8381111562000260576000848401525b50505050565b60006200027d6200027784620001fa565b620001db565b9050828152602081018484840111156200029c576200029b62000160565b5b620002a984828562000230565b509392505050565b600082601f830112620002c957620002c86200015b565b5b8151620002db84826020860162000266565b91505092915050565b600060208284031215620002fd57620002fc62000151565b5b600082015167ffffffffffffffff8111156200031e576200031d62000156565b5b6200032c84828501620002b1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037d57607f821691505b6020821081141562000394576200039362000335565b5b50919050565b61149980620003aa6000396000f3fe6080604052600436106100865760003560e01c8063a7737bd311610059578063a7737bd314610159578063cfa5e5cc14610196578063d0e30db0146101bf578063d6b349f4146101c9578063f89992a51461020657610086565b80632d120b0f1461008b57806358333792146100c85780635c8bd43f146101055780638da5cb5b1461012e575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610c03565b610243565b6040516100bf9190610d8b565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610e0b565b6103d5565b6040516100fc9190610ef6565b60405180910390f35b34801561011157600080fd5b5061012c6004803603810190610127919061104d565b610472565b005b34801561013a57600080fd5b506101436105c7565b604051610150919061119c565b60405180910390f35b34801561016557600080fd5b50610180600480360381019061017b9190610c03565b6105eb565b60405161018d9190611201565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190611223565b610695565b005b6101c7610859565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190611292565b6108c2565b6040516101fd91906112ed565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190610e0b565b610956565b60405161023a91906112ed565b60405180910390f35b606080606060076000858152602001908152602001600020805461026690611337565b80601f016020809104026020016040519081016040528092919081815260200182805461029290611337565b80156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b5050505050915060086000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156103c557838290600052602060002001805461033890611337565b80601f016020809104026020016040519081016040528092919081815260200182805461036490611337565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b505050505081526020019060010190610319565b5050505090508092505050919050565b60606000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561046257602002820191906000526020600020905b81548152602001906001019080831161044e575b5050505050905080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ca57600080fd5b600060066000898152602001908152602001600020876040516104ed91906113a5565b9081526020016040518091039020905060405180608001604052808781526020018681526020018581526020018481525081600001906004610530929190610a05565b5081816001018190555086600760008a81526020019081526020016000209080519060200190610561929190610a65565b50604051806080016040528087815260200186815260200185815260200184815250600860008a81526020019081526020016000209060046105a4929190610a05565b5081600960008a8152602001908152602001600020819055505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608060076000848152602001908152602001600020805461060c90611337565b80601f016020809104026020016040519081016040528092919081815260200182805461063890611337565b80156106855780601f1061065a57610100808354040283529160200191610685565b820191906000526020600020905b81548152906001019060200180831161066857829003601f168201915b5050505050905080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ed57600080fd5b81600360008581526020019081526020016000208260405161070f91906113a5565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156108bf573d6000803e3d6000fd5b50565b60008060096000858152602001908152602001600020549050604051806020016040528085815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020906001610937929190610aeb565b508083141561094a576001915050610950565b60009150505b92915050565b600080600090505b6002805490508110156109fa578273ffffffffffffffffffffffffffffffffffffffff1660028281548110610996576109956113bc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109e7576001915050610a00565b80806109f29061141a565b91505061095e565b50600090505b919050565b828054828255906000526020600020908101928215610a54579160200282015b82811115610a53578251829080519060200190610a43929190610a65565b5091602001919060010190610a25565b5b509050610a619190610b38565b5090565b828054610a7190611337565b90600052602060002090601f016020900481019282610a935760008555610ada565b82601f10610aac57805160ff1916838001178555610ada565b82800160010185558215610ada579182015b82811115610ad9578251825591602001919060010190610abe565b5b509050610ae79190610b5c565b5090565b828054828255906000526020600020908101928215610b27579160200282015b82811115610b26578251825591602001919060010190610b0b565b5b509050610b349190610b5c565b5090565b5b80821115610b585760008181610b4f9190610b79565b50600101610b39565b5090565b5b80821115610b75576000816000905550600101610b5d565b5090565b508054610b8590611337565b6000825580601f10610b975750610bb6565b601f016020900490600052602060002090810190610bb59190610b5c565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610be081610bcd565b8114610beb57600080fd5b50565b600081359050610bfd81610bd7565b92915050565b600060208284031215610c1957610c18610bc3565b5b6000610c2784828501610bee565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c96578082015181840152602081019050610c7b565b83811115610ca5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610cc782610c5c565b610cd18185610c67565b9350610ce1818560208601610c78565b610cea81610cab565b840191505092915050565b6000610d018383610cbc565b905092915050565b6000602082019050919050565b6000610d2182610c30565b610d2b8185610c3b565b935083602082028501610d3d85610c4c565b8060005b85811015610d795784840389528151610d5a8582610cf5565b9450610d6583610d09565b925060208a01995050600181019050610d41565b50829750879550505050505092915050565b60006020820190508181036000830152610da58184610d16565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dd882610dad565b9050919050565b610de881610dcd565b8114610df357600080fd5b50565b600081359050610e0581610ddf565b92915050565b600060208284031215610e2157610e20610bc3565b5b6000610e2f84828501610df6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e6d81610bcd565b82525050565b6000610e7f8383610e64565b60208301905092915050565b6000602082019050919050565b6000610ea382610e38565b610ead8185610e43565b9350610eb883610e54565b8060005b83811015610ee9578151610ed08882610e73565b9750610edb83610e8b565b925050600181019050610ebc565b5085935050505092915050565b60006020820190508181036000830152610f108184610e98565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f5a82610cab565b810181811067ffffffffffffffff82111715610f7957610f78610f22565b5b80604052505050565b6000610f8c610bb9565b9050610f988282610f51565b919050565b600067ffffffffffffffff821115610fb857610fb7610f22565b5b610fc182610cab565b9050602081019050919050565b82818337600083830152505050565b6000610ff0610feb84610f9d565b610f82565b90508281526020810184848401111561100c5761100b610f1d565b5b611017848285610fce565b509392505050565b600082601f83011261103457611033610f18565b5b8135611044848260208601610fdd565b91505092915050565b600080600080600080600060e0888a03121561106c5761106b610bc3565b5b600061107a8a828b01610bee565b975050602088013567ffffffffffffffff81111561109b5761109a610bc8565b5b6110a78a828b0161101f565b965050604088013567ffffffffffffffff8111156110c8576110c7610bc8565b5b6110d48a828b0161101f565b955050606088013567ffffffffffffffff8111156110f5576110f4610bc8565b5b6111018a828b0161101f565b945050608088013567ffffffffffffffff81111561112257611121610bc8565b5b61112e8a828b0161101f565b93505060a088013567ffffffffffffffff81111561114f5761114e610bc8565b5b61115b8a828b0161101f565b92505060c061116c8a828b01610bee565b91505092959891949750929550565b600061118682610dad565b9050919050565b6111968161117b565b82525050565b60006020820190506111b1600083018461118d565b92915050565b600082825260208201905092915050565b60006111d382610c5c565b6111dd81856111b7565b93506111ed818560208601610c78565b6111f681610cab565b840191505092915050565b6000602082019050818103600083015261121b81846111c8565b905092915050565b60008060006060848603121561123c5761123b610bc3565b5b600061124a86828701610bee565b935050602061125b86828701610df6565b925050604084013567ffffffffffffffff81111561127c5761127b610bc8565b5b6112888682870161101f565b9150509250925092565b600080604083850312156112a9576112a8610bc3565b5b60006112b785828601610bee565b92505060206112c885828601610bee565b9150509250929050565b60008115159050919050565b6112e7816112d2565b82525050565b600060208201905061130260008301846112de565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061134f57607f821691505b6020821081141561136357611362611308565b5b50919050565b600081905092915050565b600061137f82610c5c565b6113898185611369565b9350611399818560208601610c78565b80840191505092915050565b60006113b18284611374565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142582610bcd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611458576114576113eb565b5b60018201905091905056fea26469706673582212207b25e24ec1fc98095f85ff3a648bb208d2a02b8b6a757d68aa187ef3232a2ebd64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063a7737bd311610059578063a7737bd314610159578063cfa5e5cc14610196578063d0e30db0146101bf578063d6b349f4146101c9578063f89992a51461020657610086565b80632d120b0f1461008b57806358333792146100c85780635c8bd43f146101055780638da5cb5b1461012e575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610c03565b610243565b6040516100bf9190610d8b565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610e0b565b6103d5565b6040516100fc9190610ef6565b60405180910390f35b34801561011157600080fd5b5061012c6004803603810190610127919061104d565b610472565b005b34801561013a57600080fd5b506101436105c7565b604051610150919061119c565b60405180910390f35b34801561016557600080fd5b50610180600480360381019061017b9190610c03565b6105eb565b60405161018d9190611201565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190611223565b610695565b005b6101c7610859565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190611292565b6108c2565b6040516101fd91906112ed565b60405180910390f35b34801561021257600080fd5b5061022d60048036038101906102289190610e0b565b610956565b60405161023a91906112ed565b60405180910390f35b606080606060076000858152602001908152602001600020805461026690611337565b80601f016020809104026020016040519081016040528092919081815260200182805461029290611337565b80156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b5050505050915060086000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156103c557838290600052602060002001805461033890611337565b80601f016020809104026020016040519081016040528092919081815260200182805461036490611337565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b505050505081526020019060010190610319565b5050505090508092505050919050565b60606000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561046257602002820191906000526020600020905b81548152602001906001019080831161044e575b5050505050905080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ca57600080fd5b600060066000898152602001908152602001600020876040516104ed91906113a5565b9081526020016040518091039020905060405180608001604052808781526020018681526020018581526020018481525081600001906004610530929190610a05565b5081816001018190555086600760008a81526020019081526020016000209080519060200190610561929190610a65565b50604051806080016040528087815260200186815260200185815260200184815250600860008a81526020019081526020016000209060046105a4929190610a05565b5081600960008a8152602001908152602001600020819055505050505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608060076000848152602001908152602001600020805461060c90611337565b80601f016020809104026020016040519081016040528092919081815260200182805461063890611337565b80156106855780601f1061065a57610100808354040283529160200191610685565b820191906000526020600020905b81548152906001019060200180831161066857829003601f168201915b5050505050905080915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ed57600080fd5b81600360008581526020019081526020016000208260405161070f91906113a5565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156108bf573d6000803e3d6000fd5b50565b60008060096000858152602001908152602001600020549050604051806020016040528085815250600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020906001610937929190610aeb565b508083141561094a576001915050610950565b60009150505b92915050565b600080600090505b6002805490508110156109fa578273ffffffffffffffffffffffffffffffffffffffff1660028281548110610996576109956113bc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109e7576001915050610a00565b80806109f29061141a565b91505061095e565b50600090505b919050565b828054828255906000526020600020908101928215610a54579160200282015b82811115610a53578251829080519060200190610a43929190610a65565b5091602001919060010190610a25565b5b509050610a619190610b38565b5090565b828054610a7190611337565b90600052602060002090601f016020900481019282610a935760008555610ada565b82601f10610aac57805160ff1916838001178555610ada565b82800160010185558215610ada579182015b82811115610ad9578251825591602001919060010190610abe565b5b509050610ae79190610b5c565b5090565b828054828255906000526020600020908101928215610b27579160200282015b82811115610b26578251825591602001919060010190610b0b565b5b509050610b349190610b5c565b5090565b5b80821115610b585760008181610b4f9190610b79565b50600101610b39565b5090565b5b80821115610b75576000816000905550600101610b5d565b5090565b508054610b8590611337565b6000825580601f10610b975750610bb6565b601f016020900490600052602060002090810190610bb59190610b5c565b5b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610be081610bcd565b8114610beb57600080fd5b50565b600081359050610bfd81610bd7565b92915050565b600060208284031215610c1957610c18610bc3565b5b6000610c2784828501610bee565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c96578082015181840152602081019050610c7b565b83811115610ca5576000848401525b50505050565b6000601f19601f8301169050919050565b6000610cc782610c5c565b610cd18185610c67565b9350610ce1818560208601610c78565b610cea81610cab565b840191505092915050565b6000610d018383610cbc565b905092915050565b6000602082019050919050565b6000610d2182610c30565b610d2b8185610c3b565b935083602082028501610d3d85610c4c565b8060005b85811015610d795784840389528151610d5a8582610cf5565b9450610d6583610d09565b925060208a01995050600181019050610d41565b50829750879550505050505092915050565b60006020820190508181036000830152610da58184610d16565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dd882610dad565b9050919050565b610de881610dcd565b8114610df357600080fd5b50565b600081359050610e0581610ddf565b92915050565b600060208284031215610e2157610e20610bc3565b5b6000610e2f84828501610df6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e6d81610bcd565b82525050565b6000610e7f8383610e64565b60208301905092915050565b6000602082019050919050565b6000610ea382610e38565b610ead8185610e43565b9350610eb883610e54565b8060005b83811015610ee9578151610ed08882610e73565b9750610edb83610e8b565b925050600181019050610ebc565b5085935050505092915050565b60006020820190508181036000830152610f108184610e98565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f5a82610cab565b810181811067ffffffffffffffff82111715610f7957610f78610f22565b5b80604052505050565b6000610f8c610bb9565b9050610f988282610f51565b919050565b600067ffffffffffffffff821115610fb857610fb7610f22565b5b610fc182610cab565b9050602081019050919050565b82818337600083830152505050565b6000610ff0610feb84610f9d565b610f82565b90508281526020810184848401111561100c5761100b610f1d565b5b611017848285610fce565b509392505050565b600082601f83011261103457611033610f18565b5b8135611044848260208601610fdd565b91505092915050565b600080600080600080600060e0888a03121561106c5761106b610bc3565b5b600061107a8a828b01610bee565b975050602088013567ffffffffffffffff81111561109b5761109a610bc8565b5b6110a78a828b0161101f565b965050604088013567ffffffffffffffff8111156110c8576110c7610bc8565b5b6110d48a828b0161101f565b955050606088013567ffffffffffffffff8111156110f5576110f4610bc8565b5b6111018a828b0161101f565b945050608088013567ffffffffffffffff81111561112257611121610bc8565b5b61112e8a828b0161101f565b93505060a088013567ffffffffffffffff81111561114f5761114e610bc8565b5b61115b8a828b0161101f565b92505060c061116c8a828b01610bee565b91505092959891949750929550565b600061118682610dad565b9050919050565b6111968161117b565b82525050565b60006020820190506111b1600083018461118d565b92915050565b600082825260208201905092915050565b60006111d382610c5c565b6111dd81856111b7565b93506111ed818560208601610c78565b6111f681610cab565b840191505092915050565b6000602082019050818103600083015261121b81846111c8565b905092915050565b60008060006060848603121561123c5761123b610bc3565b5b600061124a86828701610bee565b935050602061125b86828701610df6565b925050604084013567ffffffffffffffff81111561127c5761127b610bc8565b5b6112888682870161101f565b9150509250925092565b600080604083850312156112a9576112a8610bc3565b5b60006112b785828601610bee565b92505060206112c885828601610bee565b9150509250929050565b60008115159050919050565b6112e7816112d2565b82525050565b600060208201905061130260008301846112de565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061134f57607f821691505b6020821081141561136357611362611308565b5b50919050565b600081905092915050565b600061137f82610c5c565b6113898185611369565b9350611399818560208601610c78565b80840191505092915050565b60006113b18284611374565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142582610bcd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611458576114576113eb565b5b60018201905091905056fea26469706673582212207b25e24ec1fc98095f85ff3a648bb208d2a02b8b6a757d68aa187ef3232a2ebd64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 5,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "nameOfGame",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 59,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "studentsArray",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "students",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_address))"
      },
      {
        "astId": 69,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "studentsAddresses",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 73,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "studentsIds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 80,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "questions",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Questions)51_storage))"
      },
      {
        "astId": 84,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "idQuestions",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 89,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "questionAnswers",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 93,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "correctAnswerMapping",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 98,
        "contract": "contracts/kahoot.sol:kahoot",
        "label": "didStudentRespond",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Questions)51_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct kahoot.Questions)",
        "numberOfBytes": "32",
        "value": "t_struct(Questions)51_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(string => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_address)"
      },
      "t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_struct(Questions)51_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(string => struct kahoot.Questions))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_struct(Questions)51_storage)"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Questions)51_storage": {
        "encoding": "inplace",
        "label": "struct kahoot.Questions",
        "members": [
          {
            "astId": 48,
            "contract": "contracts/kahoot.sol:kahoot",
            "label": "Answers",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 50,
            "contract": "contracts/kahoot.sol:kahoot",
            "label": "correctAnswer",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}